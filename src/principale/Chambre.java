/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package principale;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANDRY
 */
public final class Chambre extends javax.swing.JFrame {

    /**
     * Creates new form Chambre
     */
    public Chambre() {
        initComponents();
        Connect();
        Table();
        ImageIcon myimage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("hotel.png")));
        Image img1 = myimage.getImage();
        Dimension labelSize = iconStyle.getPreferredSize();
        Image img2 = img1.getScaledInstance(labelSize.width, labelSize.height, Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        iconStyle.setIcon(i);
    }
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    
    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/reservationchambre", "root", "");
        }
        catch(ClassNotFoundException | SQLException ex) {
            System.out.println("erreur");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        prixnuite = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        numchambre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        retour = new javax.swing.JButton();
        iconStyle = new javax.swing.JLabel();
        ajouter = new javax.swing.JButton();
        design = new javax.swing.JComboBox();
        type = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        modifier = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        recherche = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(186, 79, 84));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Prix Nuit√© :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, -1, -1));

        prixnuite.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(prixnuite, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, 300, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NumChambre :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, -1, -1));

        numchambre.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(numchambre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 300, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Design :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Type :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        retour.setBackground(new java.awt.Color(255, 153, 0));
        retour.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        retour.setForeground(new java.awt.Color(255, 255, 255));
        retour.setText("Retour");
        retour.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });
        jPanel1.add(retour, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, 90, 40));

        iconStyle.setPreferredSize(new java.awt.Dimension(140, 120));
        jPanel1.add(iconStyle, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 140, 120));

        ajouter.setBackground(new java.awt.Color(255, 153, 0));
        ajouter.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        ajouter.setForeground(new java.awt.Color(255, 255, 255));
        ajouter.setText("Ajouter");
        ajouter.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });
        jPanel1.add(ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 530, 90, 40));

        design.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        design.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pop", "Campagne Chic", "Vintage", "Classique Chic", "Modern Design", "Ethnique", "Scandinave", "Industriel" }));
        jPanel1.add(design, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 300, 30));

        type.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Double Deluxe", "Double Economique", "Double Classique", "Double Confort", "Jumeaux Classique", "Quadruple Familiale" }));
        jPanel1.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 300, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 0, 430, 700));

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(20);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 600, 530));

        modifier.setBackground(new java.awt.Color(255, 153, 0));
        modifier.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        modifier.setForeground(new java.awt.Color(255, 255, 255));
        modifier.setText("Modifier");
        modifier.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });
        getContentPane().add(modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, 90, 40));

        supprimer.setBackground(new java.awt.Color(255, 153, 0));
        supprimer.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 255, 255));
        supprimer.setText("Supprimer");
        supprimer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 560, 90, 40));

        refresh.setBackground(new java.awt.Color(255, 153, 0));
        refresh.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("Actualiser");
        refresh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 90, 40));

        recherche.setBackground(new java.awt.Color(255, 153, 0));
        recherche.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        recherche.setForeground(new java.awt.Color(255, 255, 255));
        recherche.setText("Disponible");
        recherche.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        recherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheActionPerformed(evt);
            }
        });
        getContentPane().add(recherche, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 90, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/principale/Pics/dark.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 700));

        setSize(new java.awt.Dimension(1318, 747));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void Table() {
        String [] chambre = {"NUMCHAMBRE","DESIGN","TYPE","PRIX NUITE"};
        String [] afficher = new String[5];
        DefaultTableModel model = new DefaultTableModel(null,chambre);
        try { 
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery("SELECT * FROM chambre");
            while (rs.next()) {
                afficher[0]=rs.getString("numChambr");
                afficher[1]=rs.getString("Design");
                afficher[2]=rs.getString("Type");
                afficher[3]=rs.getString("prixNuite");
                model.addRow(afficher);
            }
            jTable1.setModel(model);
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erreur");
        }
    }
    
    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        // TODO add your handling code here:
        String var1 = numchambre.getText();
        String var2 = (String) design.getSelectedItem();
        String var3 = (String) type.getSelectedItem();
        String var4 = prixnuite.getText();
        if (!"".equals(var1) && !"".equals(var2) && !"".equals(var3) && !"".equals(var4)) {
            try {
                String query = "INSERT chambre(numChambr,Design,Type,prixNuite) VALUES(?,?,?,?)";
                pst = (PreparedStatement) con.prepareStatement(query);
                pst.setString(1, var1);
                pst.setString(2, var2);
                pst.setString(3, var3);
                pst.setString(4, var4);
                pst.executeUpdate();
                numchambre.setText("");
                prixnuite.setText("");
                numchambre.requestFocus();
                Table();
                JOptionPane.showMessageDialog(null, "Ajouter avec succ√©s !");
            }
            catch (SQLException e){
                numchambre.setText("");
                prixnuite.setText("");
                numchambre.requestFocus();
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_ajouterActionPerformed

    
    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        // TODO add your handling code here:
        Acceuil acceuil = new Acceuil();
        acceuil.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_retourActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        numchambre.setText(model.getValueAt(i, 0).toString());
        design.setSelectedItem(model.getValueAt(i, 1).toString());
        type.setSelectedItem(model.getValueAt(i, 2).toString());
        prixnuite.setText(model.getValueAt(i, 3).toString());
    }//GEN-LAST:event_jTable1MouseReleased

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:
        String var1 = numchambre.getText();
        String var2 = (String) design.getSelectedItem();
        String var3 = (String) type.getSelectedItem();
        String var4 = prixnuite.getText();
        if (!"".equals(var1) && !"".equals(var4)) {
            String modif = "SELECT * FROM chambre WHERE numChambr=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(modif);
                pst.setString(1, var1);
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String query = "UPDATE chambre SET Design=?, Type=?, prixNuite=? WHERE numChambr=?";
                    pst = (PreparedStatement) con.prepareStatement(query);
                    pst.setString(4, var1);
                    pst.setString(1, var2);
                    pst.setString(2, var3);
                    pst.setString(3, var4);
                    pst.executeUpdate();
                    numchambre.setText("");
                    prixnuite.setText("");
                    numchambre.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Chambre modifier !");
                }
                else {
                    numchambre.setText("");
                    prixnuite.setText("");
                    numchambre.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException e){
                numchambre.setText("");
                prixnuite.setText("");
                numchambre.requestFocus();
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
         
    }//GEN-LAST:event_modifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        if (!"".equals(numchambre.getText()) && !"".equals(prixnuite.getText())) {
            String del = "SELECT * FROM chambre WHERE numChambr=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(del);
                pst.setString(1, numchambre.getText());
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String suppr = "DELETE FROM chambre WHERE numChambr=?";
                    pst = (PreparedStatement) con.prepareStatement(suppr);
                    pst.setString(1, numchambre.getText());
                    pst.executeUpdate();
                    numchambre.setText("");
                    prixnuite.setText("");
                    numchambre.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Chambre supprimer !");
                }
                else {
                    numchambre.setText("");
                    prixnuite.setText("");
                    numchambre.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException exx) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        Table();
        jDateChooser1.setDate(null);
        numchambre.setText("");
        prixnuite.setText("");
        numchambre.requestFocus();
    }//GEN-LAST:event_refreshActionPerformed

    private void rechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheActionPerformed
        /*if (jDateChooser1.getDate() != null) {
            try {
                Date dateZ = (Date) jDateChooser1.getDate();
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                String date = dateFormat.format(dateZ);
                String libre = "SELECT c.numChambr, c.Design, c.Type, c.prixNuite "
                    + "FROM chambre c "
                    + "WHERE c.numChambr NOT IN ("
                    + "    SELECT r.numChambr "
                    + "    FROM reserver r "
                    + "    WHERE r.dateEntree <= ? AND (r.dateEntree + INTERVAL r.nbrJour DAY) >= ? "
                    + ") "
                    + "AND c.numChambr NOT IN ("
                    + "    SELECT s.numChambr "
                    + "    FROM sejourner s "
                    + "    WHERE s.dateEntreeSejour <= ? AND (s.dateEntreeSejour + INTERVAL s.nbrJour DAY) >= ? "
                    + ")";
                pst = (PreparedStatement) con.prepareStatement(libre);
                pst.setString(1, date);
                pst.setString(2, date);
                pst.setString(3, date);
                pst.setString(4, date);
                rs = pst.executeQuery();
                
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                Object[] row;
                        
                if (rs.next()) {
                    String [] chambre = {"NUMCHAMBRE","DESIGN","TYPE","PRIX NUITE"};
                    String [] afficher = new String[5];
                    DefaultTableModel model = new DefaultTableModel(null,chambre);
                    afficher[0]=rs.getString("numChambr");
                    afficher[1]=rs.getString("Design");
                    afficher[2]=rs.getString("Type");
                    afficher[3]=rs.getString("prixNuite");
                    model.addRow(afficher);
                    jTable1.setModel(model);*
                }
                else {
                    JOptionPane.showMessageDialog(null, "Pas de r√©sultat(s)");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erreur");
                ex.printStackTrace();
            }
        }else {
            JOptionPane.showMessageDialog(null, "Champ vide");
        }*/
        Solde solde = new Solde();
        solde.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_rechercheActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chambre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chambre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chambre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chambre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chambre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ajouter;
    private javax.swing.JComboBox design;
    private javax.swing.JLabel iconStyle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField numchambre;
    private javax.swing.JTextField prixnuite;
    private javax.swing.JButton recherche;
    private javax.swing.JButton refresh;
    private javax.swing.JButton retour;
    private javax.swing.JButton supprimer;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
}
