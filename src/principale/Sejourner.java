/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package principale;

import java.text.SimpleDateFormat;
import java.time.*;
import java.util.*;
import java.util.Calendar;
import java.io.FileNotFoundException;  
import java.io.FileOutputStream;  
import com.itextpdf.text.Document;  
import com.itextpdf.text.DocumentException;  
import com.itextpdf.text.Paragraph;  
import com.itextpdf.text.pdf.PdfWriter; 
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.toedter.calendar.JDateChooser;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.value;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANDRY
 */
public final class Sejourner extends javax.swing.JFrame {

    /**
     * Creates new form Sejourner
     */
    public Sejourner() {
        initComponents();
        Connect();
        Table();
        ImageIcon myimage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("hotel.png")));
        Image img1 = myimage.getImage();
        Dimension labelSize = iconStyle.getPreferredSize();
        Image img2 = img1.getScaledInstance(labelSize.width, labelSize.height, Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        iconStyle.setIcon(i);
        combobox();
        date();
        
    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    //
    public void date() {
        Calendar cal = Calendar.getInstance();
        Date dateCourante = cal.getTime();
        jDateChooser1.setDate(dateCourante);
    }
    //
    
    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/reservationchambre", "root", "");
        }
        catch(ClassNotFoundException | SQLException ex) {
            System.out.println("erreur");
        }
    }
    //
    public void combobox() {
        String combo = "SELECT * FROM chambre";
        try {
            numChambre.removeAllItems();
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery(combo);
            while (rs.next()) {
                //numChambre.addItem(rs.getString(0)+ " " +rs.getString(1));
                String numC = rs.getString("numChambr");
                numChambre.addItem(numC);
            }
            rs.close();
        }
        catch (SQLException exxx) {
            System.out.println("erreur");
        }
    }
    //
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        supprimer = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        modifier1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        numchambre = new javax.swing.JLabel();
        Telephone = new javax.swing.JTextField();
        dateEntre = new javax.swing.JLabel();
        idsejourfield = new javax.swing.JTextField();
        telephone = new javax.swing.JLabel();
        idsejour = new javax.swing.JLabel();
        nbrjour = new javax.swing.JLabel();
        nombrejour = new javax.swing.JTextField();
        nomclient = new javax.swing.JLabel();
        nomClient = new javax.swing.JTextField();
        iconStyle = new javax.swing.JLabel();
        retour = new javax.swing.JButton();
        ajouter1 = new javax.swing.JButton();
        numChambre = new javax.swing.JComboBox();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        modifier3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(20);
        jTable1.setRowMargin(4);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 690, 530));

        supprimer.setBackground(new java.awt.Color(255, 153, 0));
        supprimer.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 255, 255));
        supprimer.setText("Supprimer");
        supprimer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 620, 90, 40));

        refresh.setBackground(new java.awt.Color(255, 153, 0));
        refresh.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        refresh.setForeground(new java.awt.Color(255, 255, 255));
        refresh.setText("Actualiser");
        refresh.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 620, 90, 40));

        modifier1.setBackground(new java.awt.Color(255, 153, 0));
        modifier1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        modifier1.setForeground(new java.awt.Color(255, 255, 255));
        modifier1.setText("Modifier");
        modifier1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifier1ActionPerformed(evt);
            }
        });
        getContentPane().add(modifier1, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 620, 90, 40));

        jPanel1.setBackground(new java.awt.Color(186, 79, 84));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 570));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numchambre.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        numchambre.setForeground(new java.awt.Color(255, 255, 255));
        numchambre.setText("Num Chambre :");
        jPanel1.add(numchambre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, -1, -1));

        Telephone.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(Telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 540, 290, 30));

        dateEntre.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        dateEntre.setForeground(new java.awt.Color(255, 255, 255));
        dateEntre.setText("Date Entrée :");
        jPanel1.add(dateEntre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        idsejourfield.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(idsejourfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 290, 30));

        telephone.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        telephone.setForeground(new java.awt.Color(255, 255, 255));
        telephone.setText("Télephone :");
        jPanel1.add(telephone, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, -1, -1));

        idsejour.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        idsejour.setForeground(new java.awt.Color(255, 255, 255));
        idsejour.setText("Id Séjour :");
        jPanel1.add(idsejour, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, -1, -1));

        nbrjour.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        nbrjour.setForeground(new java.awt.Color(255, 255, 255));
        nbrjour.setText("Nombre Jour :");
        jPanel1.add(nbrjour, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 370, -1, 20));

        nombrejour.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(nombrejour, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 290, 30));

        nomclient.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        nomclient.setForeground(new java.awt.Color(255, 255, 255));
        nomclient.setText("Nom Client :");
        jPanel1.add(nomclient, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, -1, -1));

        nomClient.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(nomClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 470, 290, 30));

        iconStyle.setPreferredSize(new java.awt.Dimension(140, 120));
        jPanel1.add(iconStyle, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 140, 120));

        retour.setBackground(new java.awt.Color(255, 153, 0));
        retour.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        retour.setForeground(new java.awt.Color(255, 255, 255));
        retour.setText("Retour");
        retour.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });
        jPanel1.add(retour, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 600, 90, 40));

        ajouter1.setBackground(new java.awt.Color(255, 153, 0));
        ajouter1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        ajouter1.setForeground(new java.awt.Color(255, 255, 255));
        ajouter1.setText("Ajouter");
        ajouter1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajouter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouter1ActionPerformed(evt);
            }
        });
        jPanel1.add(ajouter1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 600, 90, 40));

        numChambre.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(numChambre, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 290, 30));

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 290, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 700));

        modifier3.setBackground(new java.awt.Color(255, 153, 0));
        modifier3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        modifier3.setForeground(new java.awt.Color(255, 255, 255));
        modifier3.setText("Generer PDF");
        modifier3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifier3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifier3ActionPerformed(evt);
            }
        });
        getContentPane().add(modifier3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 620, 110, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/principale/Pics/dark.jpg"))); // NOI18N
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 710));

        setSize(new java.awt.Dimension(1318, 747));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //
    //
    public void Table() {
        String [] sejourner = {"ID SEJOUR","NUM CHAMBRE","DATE ENTRE","NBR JOUR","NOM CLIENT","TELEPHONE"};
        String [] afficher = new String[6];
        DefaultTableModel model = new DefaultTableModel(null,sejourner);
        try { 
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery("SELECT * FROM sejourner");
            while (rs.next()) {
                afficher[0]=rs.getString("idsejour");
                afficher[1]=rs.getString("numChambr");
                afficher[2]=rs.getString("dateEntreeSejour");
                afficher[3]=rs.getString("nbrJour");
                afficher[4]=rs.getString("nomClient");
                afficher[5]=rs.getString("telephone");
                model.addRow(afficher);
            }
            jTable1.setModel(model);
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erreur");
        }
    }
    
    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        // TODO add your handling code here:
        Acceuil acceuil = new Acceuil();
        acceuil.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_retourActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        if (!"".equals(idsejourfield.getText()) && jDateChooser1.getDate() != null && !"".equals(nombrejour.getText()) && !"".equals(nomClient.getText()) && !"".equals(Telephone.getText())) {
            String del = "SELECT * FROM sejourner WHERE idsejour=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(del);
                pst.setString(1, idsejourfield.getText());
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String suppr = "DELETE FROM sejourner WHERE idsejour=?";
                    pst = (PreparedStatement) con.prepareStatement(suppr);
                    pst.setString(1, idsejourfield.getText());
                    pst.executeUpdate();
                    idsejourfield.setText("");
                    date();
                    nombrejour.setText("");
                    nomClient.setText("");
                    Telephone.setText("");
                    idsejourfield.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Sejourner supprimer !");
                }
                else {
                    idsejourfield.setText("");
                    date();
                    nombrejour.setText("");
                    nomClient.setText("");
                    Telephone.setText("");
                    idsejourfield.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException exx) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        idsejourfield.setText(model.getValueAt(i, 0).toString());
        numChambre.setSelectedItem(model.getValueAt(i, 1).toString());
        try {
            Date dateS = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(i, 2));
            jDateChooser1.setDate(dateS);
        }catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Erreur");
        }
        nombrejour.setText(model.getValueAt(i, 3).toString());
        nomClient.setText(model.getValueAt(i, 4).toString());
        Telephone.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_jTable1MouseReleased

    public boolean chambreOccupee(String dateDebut,String var2) throws SQLException {
        boolean style = true;
        String queryOccuper = "SELECT COUNT(*) FROM occuper INNER JOIN reserver ON occuper.idreserv = reserver.idreserv WHERE numChambr = ? AND (dateEntree <= ? AND dateEntree + INTERVAL nbrJour-1 DAY >= ?)";
        pst = (PreparedStatement) con.prepareStatement(queryOccuper);
        pst.setString(1, var2);
        pst.setString(2, dateDebut);
        pst.setString(3, dateDebut);
        rs = pst.executeQuery();
        if (rs.next() && rs.getInt(1)>0) {
            style=false;
        }
        String querySejourner = "SELECT COUNT(*) FROM sejourner WHERE numChambr = ? AND (dateEntreeSejour <= ? AND dateEntreeSejour + INTERVAL nbrJour-1 DAY >= ?)";
        pst = (PreparedStatement) con.prepareStatement(querySejourner);
        pst.setString(1, var2);
        pst.setString(2, dateDebut);
        pst.setString(3, dateDebut);
        rs = pst.executeQuery();
        if (rs.next() && rs.getInt(1)>0) {
            style=false;
        }
        return style;
    }
    
    private void ajouter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouter1ActionPerformed
        // TODO add your handling code here:
        String var1 = idsejourfield.getText();
        String var2 = (String) numChambre.getSelectedItem();
        String var4 = nombrejour.getText();
        String var5 = nomClient.getText();
        String var6 = Telephone.getText();
        if (!"".equals(var1) && jDateChooser1.getDate() != null && !"".equals(var4) && !"".equals(var5) && !"".equals(var6)) {
            Date dateD = jDateChooser1.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateDebut = dateFormat.format(dateD);
            String modif = "SELECT * FROM sejourner WHERE idsejour=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(modif);
                pst.setString(1, var1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    idsejourfield.setText("");
                    date();
                    nombrejour.setText("");
                    nomClient.setText("");
                    Telephone.setText("");
                    idsejourfield.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
                else {
                    try {
                        if(chambreOccupee(dateDebut, var2)) {
                            String query = "INSERT sejourner(idsejour,numChambr,dateEntreeSejour,nbrJour,nomClient,telephone) VALUES(?,?,?,?,?,?)";
                            pst = (PreparedStatement) con.prepareStatement(query);
                            pst.setString(1, var1);
                            pst.setString(2, var2);
                            SimpleDateFormat dateStyle = new SimpleDateFormat("yyyy-MM-dd");
                            String date = dateStyle.format(jDateChooser1.getDate());
                            pst.setString(3, date);
                            pst.setString(4, var4);
                            pst.setString(5, var5);
                            pst.setString(6, var6);
                            pst.executeUpdate();
                            idsejourfield.setText("");
                            date();
                            nombrejour.setText("");
                            nomClient.setText("");
                            Telephone.setText("");
                            idsejourfield.requestFocus();
                            Table();
                            JOptionPane.showMessageDialog(null, "Ajouter avec succés !");
                            
                            //ajout auto du solde
                            String ids = "SELECT chambre.prixNuite*sejourner.nbrJour AS prix FROM chambre,sejourner WHERE idsejour = ? AND chambre.numChambr = sejourner.numChambr";
                            pst = (PreparedStatement) con.prepareStatement(ids);
                            pst.setString(1, var1);
                            rs = pst.executeQuery();
                            String prix="";
                            while (rs.next()) {
                              prix = rs.getString("prix");
                            }
                            pst.close();
                            
                            String addsolde = "UPDATE solde SET soldeActuel = soldeActuel + ? WHERE id = 1";
                            pst = (PreparedStatement) con.prepareStatement(addsolde);
                            pst.setString(1, prix);
                            pst.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Bien ajouter au solde !  " );
                        }
                        else {
                            idsejourfield.setText("");
                            date();
                            nombrejour.setText("");
                            nomClient.setText("");
                            Telephone.setText("");
                            idsejourfield.requestFocus();
                            JOptionPane.showMessageDialog(null, "Chambre occupée pour le moment !");
                        }
                    }
                    catch (SQLException e) {
                        idsejourfield.setText("");
                        date();
                        nombrejour.setText("");
                        nomClient.setText("");
                        Telephone.setText("");
                        idsejourfield.requestFocus();
                        JOptionPane.showMessageDialog(null, "Erreur");
                    }
                }
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_ajouter1ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        Table();
        idsejourfield.setText("");
        date();
        nombrejour.setText("");
        nomClient.setText("");
        Telephone.setText("");
        idsejourfield.requestFocus();
    }//GEN-LAST:event_refreshActionPerformed

    private void modifier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifier1ActionPerformed
        // TODO add your handling code here:
        String var1 = idsejourfield.getText();
        String var2 = (String) numChambre.getSelectedItem();
        String var4 = nombrejour.getText();
        String var5 = nomClient.getText();
        String var6 = Telephone.getText();
        if (!"".equals(var1) && jDateChooser1.getDate() != null && !"".equals(var4) && !"".equals(var5) && !"".equals(var6)) {
            String modif = "SELECT * FROM sejourner WHERE idsejour=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(modif);
                pst.setString(1, var1);
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String query = "UPDATE sejourner SET numChambr=?, dateEntreeSejour=?, nbrJour=?, nomClient=?, telephone=? WHERE idsejour=?";
                    pst = (PreparedStatement) con.prepareStatement(query);
                    pst.setString(6, var1);
                    pst.setString(1, var2);
                    SimpleDateFormat dateStyle = new SimpleDateFormat("yyyy-MM-dd");
                    String date = dateStyle.format(jDateChooser1.getDate());
                    pst.setString(2, date);
                    pst.setString(3, var4);
                    pst.setString(4, var5);
                    pst.setString(5, var6);
                    pst.executeUpdate();
                    idsejourfield.setText("");
                    date();
                    nombrejour.setText("");
                    nomClient.setText("");
                    Telephone.setText("");
                    idsejourfield.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Sejourner modifier !");
                }
                else {
                    idsejourfield.setText("");
                    date();
                    nombrejour.setText("");
                    nomClient.setText("");
                    Telephone.setText("");
                    idsejourfield.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException e){
                    idsejourfield.setText("");
                    date();
                    nombrejour.setText("");
                    nomClient.setText("");
                    Telephone.setText("");
                    idsejourfield.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
            }
        }else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_modifier1ActionPerformed

    private void modifier3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifier3ActionPerformed
        // TODO add your handling code here:
        String var1 = idsejourfield.getText();
        String var2 = (String) numChambre.getSelectedItem();
        String var4 = nombrejour.getText();
        String var5 = nomClient.getText();
        String var6 = Telephone.getText();
        if (!"".equals(var1) && jDateChooser1.getDate() != null && !"".equals(var4) && !"".equals(var5) && !"".equals(var6)) {
        
            Document doc = new Document();  
            try  
            {  
             //Voici l'idsejour
                try { 
                    String ids = "SELECT idsejour FROM sejourner WHERE idsejour = ?";
                    pst = (PreparedStatement) con.prepareStatement(ids);
                    pst.setString(1, var1);
                    rs = pst.executeQuery();
                    String id ="";
                    while (rs.next()) {
                      id = rs.getString("idsejour");
                    }
                    pst.close();
                    
                    //voici le nom
                    String nc = "SELECT nomClient FROM sejourner WHERE idsejour = ?";
                    pst = (PreparedStatement) con.prepareStatement(nc);
                    pst.setString(1, var1);
                    rs = pst.executeQuery();
                    String nom ="";
                    while (rs.next()) {
                      nom = rs.getString("nomClient");
                    }
                    pst.close();
                    
                    //voici design chambre
                    String numc = "SELECT numChambr FROM sejourner WHERE idsejour = ?";
                    pst = (PreparedStatement) con.prepareStatement(numc);
                    pst.setString(1, var1);
                    rs = pst.executeQuery();
                    String numChambr ="";
                    while (rs.next()) {
                      numChambr = rs.getString("numChambr");
                    }
                    pst.close();
                
                    //voici nb jours
               
                    String numj = "SELECT nbrJour FROM sejourner WHERE idsejour = ?";
                    pst = (PreparedStatement) con.prepareStatement(numj);
                    pst.setString(1, var1);
                    rs = pst.executeQuery();
                    String nbrJour ="";
                    while (rs.next()) {
                      nbrJour = rs.getString("nbrJour");
                    }
                    pst.close();
                    
                    //voici date entre
                
                    String de = "SELECT dateEntreeSejour FROM sejourner WHERE idsejour = ?";
                    pst = (PreparedStatement) con.prepareStatement(de);
                    pst.setString(1, var1);
                    rs = pst.executeQuery();
                    String dateEntree ="";
                    while (rs.next()) {
                      dateEntree = rs.getString("dateEntreeSejour");
                    }
                    pst.close();
                    
                    //generate a PDF at the specified location  
                    PdfWriter writer = PdfWriter.getInstance(doc, new FileOutputStream("D:\\Reçu.pdf"));  
                    System.out.println("PDF created.");  
                    //opens the PDF  
                    doc.open();  
                    String text = "Rakkk";
                    
                    //
                    
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                    Date dateESejour = formatter.parse(dateEntree);
                    //Formatting the date
                    String dateEntreeSejour = formatter.format(dateESejour);

                      
                    //Addig the day for the dateSortieSejour
                    Calendar cal = Calendar.getInstance();
                    cal.setTime(dateESejour);
                    cal.add(Calendar.DATE, Integer.valueOf(nbrJour));
                      
                    Date new_dt = cal.getTime();
                    String dateSortieSejour = formatter.format(new_dt);

                    //adds paragraph to the PDF file 
                    /*Sejour N° 011
                    Nom du Client : RAKOTO Bernard
                    Désignation chambre : Chambre 102
                    Nombre de jour : 3 jours
                    Date d’entrée : 24/04/2023
                    Date de sortie : 27/04/2023*/
                    doc.add(new Paragraph("Sejour N° "+id));   
                    doc.add(new Paragraph("Nom du Client : " + nom));
                    doc.add(new Paragraph("Désignation chambre : Chambre "+ numChambr));
                    doc.add(new Paragraph("Nombre de jour : " + nbrJour + " jours"));
                    doc.add(new Paragraph("Date d’entrée : " + dateEntreeSejour));
                    doc.add(new Paragraph("Date de sortie : " + dateSortieSejour));

                    //close the PDF file  
                    doc.close();  
                    //closes the writer  
                    writer.close(); 
                    JOptionPane.showMessageDialog(null, "PDF generé avec success ! ");
                
                }
                catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erreur");
                } catch (ParseException ex) {
                Logger.getLogger(Sejourner.class.getName()).log(Level.SEVERE, null, ex);
                }
            }   
            catch (DocumentException e)  
            {  
                e.printStackTrace();  
            }   
            catch (FileNotFoundException e)  
            {  
                e.printStackTrace();  
            }  
            }else {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner une donnée à generer !");
        }

    }//GEN-LAST:event_modifier3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sejourner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sejourner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sejourner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sejourner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sejourner().setVisible(true);
            }
        });
        /*
        Calendar cal = Calendar.getInstance();
        Date dateCourante = cal.getTime();
        jDateChooser1.setDate(dateCourante);
        */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Telephone;
    private javax.swing.JButton ajouter1;
    private javax.swing.JLabel dateEntre;
    private javax.swing.JLabel iconStyle;
    private javax.swing.JLabel idsejour;
    private javax.swing.JTextField idsejourfield;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton modifier1;
    private javax.swing.JButton modifier3;
    private javax.swing.JLabel nbrjour;
    private javax.swing.JTextField nomClient;
    private javax.swing.JTextField nombrejour;
    private javax.swing.JLabel nomclient;
    private javax.swing.JComboBox numChambre;
    private javax.swing.JLabel numchambre;
    private javax.swing.JButton refresh;
    private javax.swing.JButton retour;
    private javax.swing.JButton supprimer;
    private javax.swing.JLabel telephone;
    // End of variables declaration//GEN-END:variables
}
