/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package principale;

import java.text.SimpleDateFormat;
import java.time.*;
import java.util.*;
import java.util.Calendar;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.PasswordAuthentication;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.io.FileNotFoundException; 
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.io.FileOutputStream;  
import com.itextpdf.text.Document;  
import com.itextpdf.text.DocumentException;  
import com.itextpdf.text.Paragraph;  
import com.itextpdf.text.pdf.PdfWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
/*
import java.util.Properties;
/*
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
*/

import javax.mail.*;
import javax.mail.Authenticator;
import javax.mail.internet.*;
import java.util.Properties;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ANDRY
 */
public final class Reserver extends javax.swing.JFrame {

    /**
     * Creates new form Reserver
     */
    public Reserver() {
        initComponents();
        Connect();
        Table();
        combobox();
        date();
    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    public void date() {
        Calendar cal = Calendar.getInstance();
        Date dateCourante = cal.getTime();
        datereserv.setDate(dateCourante);
    }
    
    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/reservationchambre", "root", "");
        }
        catch(ClassNotFoundException | SQLException ex) {
            System.out.println("erreur");
        }
    }
    //
    public void combobox() {
        String combo = "SELECT * FROM chambre";
        try {
            jComboBox1.removeAllItems();
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery(combo);
            while (rs.next()) {
                String numC = rs.getString("numChambr");
                jComboBox1.addItem(numC);
            }
            rs.close();
        }
        catch (SQLException exxx) {
            System.out.println("erreur");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        idreserv = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        datereserv = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        dateentre = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        nbrjour = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        mail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        nomclient = new javax.swing.JTextField();
        retour = new javax.swing.JButton();
        ajouter = new javax.swing.JButton();
        modifier = new javax.swing.JButton();
        actualiser = new javax.swing.JButton();
        supprimer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(20);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 760, 530));

        jPanel1.setBackground(new java.awt.Color(186, 79, 84));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 570));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date Entre :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, -1, -1));

        idreserv.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(idreserv, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 300, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mail :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, -1, -1));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 300, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Num Chambre :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        datereserv.setDateFormatString("yyyy-MM-dd");
        datereserv.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(datereserv, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 300, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Date Reserve :");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        dateentre.setDateFormatString("yyyy-MM-dd");
        dateentre.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(dateentre, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 300, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Id Reservation :");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        nbrjour.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(nbrjour, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 300, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nbr Jour :");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));

        mail.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, 300, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Nom Client :");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, -1, -1));

        nomclient.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(nomclient, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, 300, 30));

        retour.setBackground(new java.awt.Color(255, 153, 0));
        retour.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        retour.setForeground(new java.awt.Color(255, 255, 255));
        retour.setText("Retour");
        retour.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        retour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retourActionPerformed(evt);
            }
        });
        jPanel1.add(retour, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 610, 90, 40));

        ajouter.setBackground(new java.awt.Color(255, 153, 0));
        ajouter.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        ajouter.setForeground(new java.awt.Color(255, 255, 255));
        ajouter.setText("Ajouter");
        ajouter.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterActionPerformed(evt);
            }
        });
        jPanel1.add(ajouter, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 610, 90, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 0, 420, 700));

        modifier.setBackground(new java.awt.Color(255, 153, 0));
        modifier.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        modifier.setForeground(new java.awt.Color(255, 255, 255));
        modifier.setText("Modifier");
        modifier.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierActionPerformed(evt);
            }
        });
        getContentPane().add(modifier, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 610, 90, 40));

        actualiser.setBackground(new java.awt.Color(255, 153, 0));
        actualiser.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        actualiser.setForeground(new java.awt.Color(255, 255, 255));
        actualiser.setText("Actualiser");
        actualiser.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        actualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualiserActionPerformed(evt);
            }
        });
        getContentPane().add(actualiser, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 610, 90, 40));

        supprimer.setBackground(new java.awt.Color(255, 153, 0));
        supprimer.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 255, 255));
        supprimer.setText("Supprimer");
        supprimer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });
        getContentPane().add(supprimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 610, 90, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/principale/Pics/dark.jpg"))); // NOI18N
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 700));

        setSize(new java.awt.Dimension(1318, 747));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void Table() {
        String [] reserver = {"ID RESERV","NUM CHAMBRE","DATE RESERV","DATE ENTRE","NBR JOUR","NOM CLIENT","MAIL"};
        String [] afficher = new String[7];
        DefaultTableModel model = new DefaultTableModel(null,reserver);
        try { 
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery("SELECT * FROM reserver");
            while (rs.next()) {
                afficher[0]=rs.getString("idreserv");
                afficher[1]=rs.getString("numChambr");
                afficher[2]=rs.getString("dateReserv");
                afficher[3]=rs.getString("dateEntree");
                afficher[4]=rs.getString("nbrJour");
                afficher[5]=rs.getString("nomClient");
                afficher[6]=rs.getString("mail");
                model.addRow(afficher);
            }
            jTable1.setModel(model);
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erreur");
        }
    }
    
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        idreserv.setText(model.getValueAt(i, 0).toString());
        jComboBox1.setSelectedItem(model.getValueAt(i, 1).toString());
        try {
            Date dateS = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(i, 2));
            datereserv.setDate(dateS);
            Date dateX = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(i, 3));
            dateentre.setDate(dateX);
        }catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Erreur");
        }
        nbrjour.setText(model.getValueAt(i, 4).toString());
        nomclient.setText(model.getValueAt(i, 5).toString());
        mail.setText(model.getValueAt(i, 6).toString());
    }//GEN-LAST:event_jTable1MouseReleased

    public void sendEmail(String var5, String var2, String dateDebut, String var3 , String var6) {
        
        final String utilisateur = "fetrafaneva@gmail.com";
        final String motdepasse = "nfksmvypszmboaic";
        
        
        String serveurSmtp = "smtp.gmail.com";
        int portSmtp = 587;
        
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", serveurSmtp);
        props.put("mail.smtp.port", portSmtp);
        
        
        Session session = Session.getInstance(props, new Authenticator() {
            @Override
            protected javax.mail.PasswordAuthentication getPasswordAuthentication() {
               //char[] nigga = motdepasse.toCharArray();
               return new javax.mail.PasswordAuthentication(utilisateur,motdepasse);
            }
        });
        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(utilisateur));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(var5));
            message.setSubject("Confirmation de réservation");
            
            String contenu = "Chambre occupée : " + var2 + "\n";
            contenu+= "Date d'entrée : " + dateDebut + "\n";
            contenu+= "Date de sortie : " + var6 + "\n";
            contenu+= "Nombre de jours : " + var3 + "\n";
            
            message.setText(contenu);
            
            
            Transport.send(message);
            
            JOptionPane.showMessageDialog(null, "Mail envoyé avec succés !");
            
            System.out.println("Mail envoyé ! ");
        }
        catch (MessagingException e) {
            JOptionPane.showMessageDialog(null, "Erreur lors de l'envoie du mail !");
            System.out.println("Mail non envoyé ! ");
            System.out.println(e);
        }
    }
    
    public boolean chambreOccupee(String dateDebut,String var2) throws SQLException {
        boolean style = true;
        String queryOccuper = "SELECT COUNT(*) FROM reserver WHERE numChambr = ? AND (dateEntree <= ? AND dateEntree + INTERVAL nbrJour-1 DAY >= ?)";
        pst = (PreparedStatement) con.prepareStatement(queryOccuper);
        pst.setString(1, var2);
        pst.setString(2, dateDebut);
        pst.setString(3, dateDebut);
        rs = pst.executeQuery();
        if (rs.next() && rs.getInt(1)>0) {
            style=false;
        }
        String querySejourner = "SELECT COUNT(*) FROM sejourner WHERE numChambr = ? AND (dateEntreeSejour <= ? AND dateEntreeSejour + INTERVAL nbrJour-1 DAY >= ?)";
        pst = (PreparedStatement) con.prepareStatement(querySejourner);
        pst.setString(1, var2);
        pst.setString(2, dateDebut);
        pst.setString(3, dateDebut);
        rs = pst.executeQuery();
        if (rs.next() && rs.getInt(1)>0) {
            style=false;
        }
        return style;
    }
    
    private void ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterActionPerformed
        String var1 = idreserv.getText();
        String var2 = (String) jComboBox1.getSelectedItem();
        String var3 = nbrjour.getText();
        String var4 = nomclient.getText();
        String var5 = mail.getText();
        
        
        
        
        if (!"".equals(var1) && dateentre.getDate() != null && !"".equals(var3) && !"".equals(var4) && !"".equals(var5)) {
            Date dateD = dateentre.getDate();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateDebut = dateFormat.format(dateD);
            //Addig the day for the dateSortieSejour
            Calendar cal = Calendar.getInstance();
            cal.setTime(dateD);
            cal.add(Calendar.DATE, Integer.valueOf(var3));

            Date new_dt = cal.getTime();
            String var6 = dateFormat.format(new_dt);
            
            String modif = "SELECT * FROM reserver WHERE idreserv=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(modif);
                pst.setString(1, var1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    idreserv.setText("");
                    date();
                    dateentre.setDate(null);
                    nbrjour.setText("");
                    nomclient.setText("");
                    mail.setText("");
                    idreserv.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
                else {
                    try {
                        if(chambreOccupee(dateDebut, var2)) {
                            String query = "INSERT reserver(idreserv,numChambr,dateReserv,dateEntree,nbrJour,nomClient,mail) VALUES(?,?,?,?,?,?,?)";
                            pst = (PreparedStatement) con.prepareStatement(query);
                            pst.setString(1, var1);
                            pst.setString(2, var2);
                            SimpleDateFormat dateRes = new SimpleDateFormat("yyyy-MM-dd");
                            String date = dateRes.format(datereserv.getDate());
                            pst.setString(3, date);
                            pst.setDate(4, java.sql.Date.valueOf(dateDebut));
                            pst.setString(5, var3);
                            pst.setString(6, var4);
                            pst.setString(7, var5);
                            pst.executeUpdate();
                            idreserv.setText("");
                            date();
                            dateentre.setDate(null);
                            nbrjour.setText("");
                            nomclient.setText("");
                            mail.setText("");
                            idreserv.requestFocus();
                            Table();
                            JOptionPane.showMessageDialog(null, "Ajouter avec succés !");
                            
                            
                            sendEmail(var5,var2,dateDebut,var3,var6);
                        }
                        else {
                            idreserv.setText("");
                            date();
                            dateentre.setDate(null);
                            nbrjour.setText("");
                            nomclient.setText("");
                            mail.setText("");
                            idreserv.requestFocus();
                            JOptionPane.showMessageDialog(null, "Chambre occupée pour le moment !");
                        }
                    }
                    catch (SQLException e) {
                        idreserv.setText("");
                        date();
                        dateentre.setDate(null);
                        nbrjour.setText("");
                        nomclient.setText("");
                        mail.setText("");
                        idreserv.requestFocus();
                        JOptionPane.showMessageDialog(null, "Erreur");
                    }
                }
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_ajouterActionPerformed

    
    private void retourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retourActionPerformed
        // TODO add your handling code here:
        Acceuil acceuil = new Acceuil();
        acceuil.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_retourActionPerformed

    private void modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierActionPerformed
        // TODO add your handling code here:
        String var1 = idreserv.getText();
        String var2 = (String) jComboBox1.getSelectedItem();
        String var3 = nbrjour.getText();
        String var4 = nomclient.getText();
        String var5 = mail.getText();
        if (!"".equals(var1) && datereserv.getDate() != null && dateentre.getDate() != null && !"".equals(var3) && !"".equals(var4) && !"".equals(var5)) {
            String modif = "SELECT * FROM reserver WHERE idreserv=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(modif);
                pst.setString(1, var1);
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String query = "UPDATE reserver SET numChambr=?, dateReserv=?, dateEntree=?, nbrJour=?, nomClient=?, mail=? WHERE idreserv=?";
                    pst = (PreparedStatement) con.prepareStatement(query);
                    pst.setString(7, var1);
                    pst.setString(1, var2);
                    SimpleDateFormat dateStyle = new SimpleDateFormat("yyyy-MM-dd");
                    String date = dateStyle.format(datereserv.getDate());
                    pst.setString(2, date);
                    SimpleDateFormat dateStyleX = new SimpleDateFormat("yyyy-MM-dd");
                    String dateX = dateStyleX.format(dateentre.getDate());
                    pst.setString(3, dateX);
                    pst.setString(4, var3);
                    pst.setString(5, var4);
                    pst.setString(6, var5);
                    pst.executeUpdate();
                    idreserv.setText("");
                    date();
                    dateentre.setDate(null);
                    nbrjour.setText("");
                    nomclient.setText("");
                    mail.setText("");
                    idreserv.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Reservation modifiée !");
                }
                else {
                    idreserv.setText("");
                    date();
                    dateentre.setDate(null);
                    nbrjour.setText("");
                    nomclient.setText("");
                    mail.setText("");
                    idreserv.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException e){
                    idreserv.setText("");
                    date();
                    dateentre.setDate(null);
                    nbrjour.setText("");
                    nomclient.setText("");
                    mail.setText("");
                    idreserv.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
            }
        }else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_modifierActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
        // TODO add your handling code here:
        if (!"".equals(idreserv.getText()) && datereserv.getDate() != null && dateentre.getDate() != null && !"".equals(nbrjour.getText()) && !"".equals(nomclient.getText()) && !"".equals(mail.getText())) {
            String del = "SELECT * FROM reserver WHERE idreserv=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(del);
                pst.setString(1, idreserv.getText());
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String suppr = "DELETE FROM reserver WHERE idreserv=?";
                    pst = (PreparedStatement) con.prepareStatement(suppr);
                    pst.setString(1, idreserv.getText());
                    pst.executeUpdate();
                    //
                    String deleTe = "DELETE FROM occuper WHERE idreserv=?";
                    pst = (PreparedStatement) con.prepareStatement(deleTe);
                    pst.setString(1, idreserv.getText());
                    pst.executeUpdate();
                    //
                    idreserv.setText("");
                    date();
                    dateentre.setDate(null);
                    nbrjour.setText("");
                    nomclient.setText("");
                    mail.setText("");
                    idreserv.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Reservation supprimée !");
                }
                else {
                    idreserv.setText("");
                    date();
                    dateentre.setDate(null);
                    nbrjour.setText("");
                    nomclient.setText("");
                    mail.setText("");
                    idreserv.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException exx) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_supprimerActionPerformed

    private void actualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualiserActionPerformed
        // TODO add your handling code here:
        Table();
        idreserv.setText("");
        date();
        dateentre.setDate(null);
        nbrjour.setText("");
        nomclient.setText("");
        mail.setText("");
        idreserv.requestFocus();
    }//GEN-LAST:event_actualiserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reserver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reserver().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualiser;
    private javax.swing.JButton ajouter;
    private com.toedter.calendar.JDateChooser dateentre;
    private com.toedter.calendar.JDateChooser datereserv;
    private javax.swing.JTextField idreserv;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField mail;
    private javax.swing.JButton modifier;
    private javax.swing.JTextField nbrjour;
    private javax.swing.JTextField nomclient;
    private javax.swing.JButton retour;
    private javax.swing.JButton supprimer;
    // End of variables declaration//GEN-END:variables
}
