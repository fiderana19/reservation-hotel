/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package principale;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANDRY
 */
public final class Occuper extends javax.swing.JFrame {

    /**
     * Creates new form Occuper
     */
    public Occuper() {
        initComponents();
        Connect();
        Table();
        ImageIcon myimage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("signe-de-lhotel.png")));
        Image img1 = myimage.getImage();
        Dimension labelSize = iconStyle.getPreferredSize();
        Image img2 = img1.getScaledInstance(labelSize.width, labelSize.height, Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        iconStyle.setIcon(i);
        combobox();
    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    
    public void Connect() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/reservationchambre", "root", "");
        }
        catch(ClassNotFoundException | SQLException ex) {
            System.out.println("erreur");
        }
    }
    
    public void combobox() {
        String combo = "SELECT * FROM reserver";
        try {
            idreserv.removeAllItems();
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery(combo);
            while (rs.next()) {
                String numC = rs.getString("idreserv");
                idreserv.addItem(numC);
            }
            rs.close();
        }
        catch (SQLException exxx) {
            System.out.println("erreur");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        idoccup = new javax.swing.JTextField();
        idreserv = new javax.swing.JComboBox();
        iconStyle = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setRowHeight(20);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 600, 530));

        jButton2.setBackground(new java.awt.Color(255, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Actualiser");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 610, 90, 40));

        jButton4.setBackground(new java.awt.Color(255, 153, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Modifier");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 610, 90, 40));

        jButton5.setBackground(new java.awt.Color(255, 153, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Suppr");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 610, 90, 40));

        jPanel1.setBackground(new java.awt.Color(186, 79, 84));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ID reservavtion :");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ID occup√©e :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        idoccup.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(idoccup, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 300, 30));

        idreserv.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jPanel1.add(idreserv, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 300, 30));

        iconStyle.setPreferredSize(new java.awt.Dimension(180, 180));
        jPanel1.add(iconStyle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 180, 180));

        jButton1.setBackground(new java.awt.Color(255, 153, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Retour");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 90, 40));

        jButton3.setBackground(new java.awt.Color(255, 153, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Ajouter");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 470, 90, 40));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 700));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 700));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/principale/Pics/dark.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 700));

        setSize(new java.awt.Dimension(1318, 747));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void Table() {
        String [] occuper = {"ID OCCUPER","ID RESERVATION"};
        String [] afficher = new String[2];
        DefaultTableModel model = new DefaultTableModel(null,occuper);
        try { 
            Statement st = (Statement) con.createStatement();
            rs = st.executeQuery("SELECT * FROM occuper");
            while (rs.next()) {
                afficher[0]=rs.getString("idOccup");
                afficher[1]=rs.getString("idreserv");
                model.addRow(afficher);
            }
            jTable1.setModel(model);
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erreur");
        }
    }
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        idoccup.setText(model.getValueAt(i, 0).toString());
        idreserv.setSelectedItem(model.getValueAt(i, 1).toString());
    }//GEN-LAST:event_jTable1MouseReleased

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String var1 = idoccup.getText();
        String var2 = (String) idreserv.getSelectedItem();
        if (!"".equals(var1)) {
            String style = "SELECT idreserv FROM occuper WHERE idreserv=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(style);
                pst.setString(1, var2);
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                idoccup.setText("");
                idoccup.requestFocus();
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    idoccup.setText("");
                    idoccup.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
                else {
                    String query = "INSERT occuper(idOccup,idreserv) VALUES(?,?)";
                    pst = (PreparedStatement) con.prepareStatement(query);
                    pst.setString(1, var1);
                    pst.setString(2, var2);
                    pst.executeUpdate();
                    idoccup.setText("");
                    idoccup.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Ajouter avec succ√©s !");
                    
                    
                            //ajout auto du solde---------------------------------------------------------------
                            String ids = "SELECT occuper.idreserv, chambre.prixNuite*reserver.nbrJour AS prix FROM occuper,chambre,reserver WHERE idOccup = ? AND chambre.numChambr = reserver.numChambr AND reserver.idreserv = occuper.idreserv;";
                            pst = (PreparedStatement) con.prepareStatement(ids);
                            pst.setString(1, var1);
                            rs = pst.executeQuery();
                            String prix="";
                            while (rs.next()) {
                              prix = rs.getString("prix");
                            }
                            pst.close();
                            
                            String addsolde = "UPDATE solde SET soldeActuel = soldeActuel + ? WHERE id = 1";
                            pst = (PreparedStatement) con.prepareStatement(addsolde);
                            pst.setString(1, prix);
                            pst.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Bien ajouter au solde !  " );
                            //--------------------------------------------------------------------------------
                }
            }
            catch (SQLException exx) {
                idoccup.setText("");
                idoccup.requestFocus();
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String var1 = idoccup.getText();
        String var2 = (String) idreserv.getSelectedItem();
        if (!"".equals(var1)) {
            String modif = "SELECT * FROM occuper WHERE idOccup=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(modif);
                pst.setString(1, var1);
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String query = "UPDATE occuper SET idreserv=? WHERE idOccup=?";
                    pst = (PreparedStatement) con.prepareStatement(query);
                    pst.setString(2, var1);
                    pst.setString(1, var2);
                    pst.executeUpdate();
                    idoccup.setText("");
                    idoccup.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Occuper modifier !");
                }
                else {
                    idoccup.setText("");
                    idoccup.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException e){
                idoccup.setText("");
                idoccup.requestFocus();
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (!"".equals(idoccup.getText())) {
            String del = "SELECT * FROM occuper WHERE idOccup=?";
            try {
                pst = (PreparedStatement) con.prepareStatement(del);
                pst.setString(1, idoccup.getText());
                rs = pst.executeQuery();
            }
            catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
            try {
                if (rs.next()) {
                    String suppr = "DELETE FROM occuper WHERE idOccup=?";
                    pst = (PreparedStatement) con.prepareStatement(suppr);
                    pst.setString(1, idoccup.getText());
                    pst.executeUpdate();
                    idoccup.setText("");
                    idoccup.requestFocus();
                    Table();
                    JOptionPane.showMessageDialog(null, "Occuper supprimer !");
                }
                else {
                    idoccup.setText("");
                    idoccup.requestFocus();
                    JOptionPane.showMessageDialog(null, "Erreur");
                }
            }
            catch (SQLException exx) {
                JOptionPane.showMessageDialog(null, "Erreur");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Champ(s) vide(s) !");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Acceuil acceuil = new Acceuil();
        acceuil.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Table();
        idoccup.setText("");
        idoccup.requestFocus();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Occuper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Occuper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Occuper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Occuper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Occuper().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconStyle;
    private javax.swing.JTextField idoccup;
    private javax.swing.JComboBox idreserv;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
